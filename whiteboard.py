'''
Created on Jan 24, 2020

@author: Atrisha
'''
import numpy as np
import matplotlib.pyplot as plt
import math
import utils
import sqlite3
import ast


def translate(pt1,pt2,yaw,pos):
    yaw = 1.5
    ''' r*cos(yaw-slope + 90) = d '''
    d = utils.distance_numpy([pt1[0],pt1[1]], [pt2[0],pt2[1]], [pos[0],pos[1]])
    slope = math.atan((pt2[1]-pt1[1])/(pt2[0]-pt1[0]))
    r = d / (math.cos(yaw - slope + (.5*math.pi)))
    print(r)
    print(d)
    plt.plot([pt1[0],pt2[0]],[pt1[1],pt1[1]],'ro')
    plt.plot([538842.32],[4814000.61],'bx')
    plt.plot()
    plt.show()
#translate((538837.55,4814002.03), (538842.14,4814005.39))


def show_dist_to_lane_boundary():
    traj = [(538842.31999999995, 4814000.6100000003), (538842.30861410464, 4814000.6249298444), (538842.29628636944, 4814000.6424344024), (538842.28268724121, 4814000.6641580509), (538842.26748709544, 4814000.6915962473), (538842.25035639771, 4814000.7260995833), (538842.23096586776, 4814000.7688778136), (538842.20898664091, 4814000.8210038962), (538842.18409043085, 4814000.8834180245), (538842.15594969213, 4814000.9569316721), (538842.1242377829, 4814001.0422316222), (538842.08862912701, 4814001.1398840053), (538842.0487993767, 4814001.2503383486), (538842.00442557526, 4814001.3739315914), (538841.95518631896, 4814001.5108921425), (538841.90076192026, 4814001.6613439051), (538841.84083456965, 4814001.825310315), (538841.77508849942, 4814002.0027183862), (538841.70321014349, 4814002.1934027346), (538841.62488830346, 4814002.3971096277), (538841.53981430794, 4814002.6135010133), (538841.44768217718, 4814002.8421585597), (538841.34818878444, 4814003.0825876901), (538841.24103401857, 4814003.3342216248), (538841.12592094752, 4814003.5964254132), (538841.00255597918, 4814003.8684999738), (538840.87064902543, 4814004.1496861298), (538840.72991366358, 4814004.4391686469), (538840.58006729907, 4814004.7360802675), (538840.42083132896, 4814005.0395057537), (538840.25193130306, 4814005.3484859159), (538840.07309708686, 4814005.6620216593), (538839.88406302442, 4814005.9790780144), (538839.68456810038, 4814006.2985881744), (538839.47435610299, 4814006.6194575373), (538839.253175786, 4814006.9405677319), (538839.02078103158, 4814007.2607806725), (538838.77693101286, 4814007.5789425764), (538838.52139035589, 4814007.8938880134), (538838.25392930245, 4814008.20444394), (538837.97432387306, 4814008.5094337389), (538837.68235602882, 4814008.8076812439), (538837.37781383377, 4814009.0980147952), (538837.060491618, 4814009.3792712623), (538836.7301901402, 4814009.6503000893), (538836.38671674882, 4814009.9099673228), (538836.02988554654, 4814010.1571596628), (538835.65951755166, 4814010.3907884806), (538835.27544086007, 4814010.6097938791), (538834.87749080907, 4814010.813148709), (538834.46551013901, 4814010.9998626169), (538834.03934915562, 4814011.1689860784), (538833.59886589355, 4814011.3196144402), (538833.14392627717, 4814011.4508919492), (538832.67440428515, 4814011.5620157914), (538832.19018211146, 4814011.6522401413), (538831.69115032826, 4814011.7208801769), (538831.17720804794, 4814011.7673161356), (538830.64826308715, 4814011.7909973441), (538830.10423212696, 4814011.7914462499), (538829.545040878, 4814011.7682624692), (538828.97062424058, 4814011.7211268181), (538828.38092646853, 4814011.6498053493), (538827.77590133168, 4814011.5541533865), (538827.15551227739, 4814011.4341195701), (538826.51973259437, 4814011.2897498887), (538825.86854557379, 4814011.1211917102), (538825.20194467332, 4814010.928697831), (538824.51993367844, 4814010.7126305047), (538823.82252686517, 4814010.4734654836), (538823.10974916245, 4814010.211796049), (538822.38163631549, 4814009.9283370571), (538821.63823504758, 4814009.6239289688), (538820.87960322201, 4814009.2995418897), (538820.10581000592, 4814008.9562796094), (538819.31693603192, 4814008.595383632), (538818.51307356055, 4814008.2182372222), (538817.69432664302, 4814007.8263694346), (538816.86081128404, 4814007.4214591486), (538816.01265560358, 4814007.0053391196), (538815.15000000002, 4814006.5799999991)]
    r = [538841,4814010]
    conn = sqlite3.connect('D:\\intersections_dataset\\dataset\\uni_weber.db')
    c = conn.cursor()
    q_string = "SELECT X_POSITIONS,Y_POSITIONS FROM TRAFFIC_REGIONS_DEF WHERE NAME = 'l_s_n' and REGION_PROPERTY='left_boundary' and SHAPE='line'"
    c.execute(q_string)
    res = c.fetchall()
    x,y = [],[]
    for row in res:
        x = ast.literal_eval(row[0])
        y = ast.literal_eval(row[1])
    plt.plot([x[0] for x in traj],[x[1] for x in traj],'b-')
    plt.plot(x,y,'r-')
    plt.show()
    for t in traj:
        print(utils.distance_numpy([x[0],y[0]], [x[1],y[1]], [t[0],t[1]]))
    print(utils.distance_numpy([x[0],y[0]], [x[1],y[1]], [r[0],r[1]]))
show_dist_to_lane_boundary()   
                    